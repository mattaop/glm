model2 <- mylm(wages ~ education + age, data = SLID)
print(model2)
# R code for part 3b)
summary(model2)
# R code for part 3c)
model2a <- mylm(wages ~ education, data = SLID)
model2b <- mylm(wages ~ age, data = SLID)
summary(model2a)
summary(model2b)
# R code for part 2c)
library(ggplot2)
plot(model1)
plot(model1b, which = c(1))
# R code for part 4a)
library(mylm)
model3 <- mylm(wages ~ language + age + language*age, data = SLID)
print(model3)
# R code for part 4a)
library(mylm)
model3 <- mylm(wages ~ language + age + language*age, data = SLID)
model3b <-  lm(wages ~ language + age + language*age, data = SLID)
print(model3)
print(model3b)
library(mylm)
model5 <- mylm(wages ~ education - 1, data = SLID)
model5b <-  lm(wages ~ education - 1, data = SLID)
print(model5)
print(model5b)
library(mylm)
model4 <- mylm(wages ~ language + age + language*age, data = SLID)
model4b <-  lm(wages ~ language + age + language*age, data = SLID)
print(model4)
print(model4b)
library(mylm)
model3 <- mylm(wages ~ I(education^2), data = SLID)
model3b <-  lm(wages ~ I(education^2), data = SLID)
print(model3)
print(model3b)
library(mylm)
model3 <- mylm(wages ~ sex + age + language + I(education^2), data = SLID)
model3b <-  lm(wages ~ sex + age + language + I(education^2), data = SLID)
print(model3)
print(model3b)
library(formatR)
showsol <- FALSE
library(knitr)
opts_chunk$set(tidy.opts = list(width.cutoff = 68), tidy = TRUE, warning = FALSE, error = FALSE, message = FALSE, echo = TRUE)
library(mylm)
model3 <- mylm(wages ~ sex + age + language + I(education^2), data = SLID, contrasts = list(language = "contr.treatment"))
model3b <-  lm(wages ~ sex + age + language + I(education^2), data = SLID, contrasts = list(language = "contr.treatment"))
print(model3)
print(model3b)
library(mylm)
model3 <- mylm(wages ~ sex + age + language + I(education^2), data = SLID, contrasts = list(language = "contr.treatment"))
model3b <-  lm(wages ~ sex + age + language + I(education^2), data = SLID)
print(model3)
print(model3b)
print(levels(SLID$language))
library(mylm)
model3 <- mylm(wages ~ sex + age + language + I(education^2), data = SLID)
model3b <-  lm(wages ~ sex + age + language + I(education^2), data = SLID)
print(model3)
print(model3b)
print(levels(SLID$language))
library(mylm)
model3 <- mylm(wages ~ sex + age + language.English + language + I(education^2), data = SLID)
print(levels(SLID$language))
library(mylm)
model3 <- mylm(wages ~ sex + age + language$English + language + I(education^2), data = SLID)
language <- model.matrix(~language, data = SLID)
library(mylm)
model3 <- mylm(wages ~ sex + age + language + I(education^2), data = SLID)
model3b <-  lm(wages ~ sex + age + language + I(education^2), data = SLID)
print(model3)
print(model3b)
SLID$language <- model.matrix(~language, data = SLID)
library(mylm)
model3 <- mylm(wages ~ sex + age + language + I(education^2), data = SLID)
language <- model.matrix(~language, data = SLID)
head(language)
library(mylm)
model3 <- mylm(wages ~ sex + age + language + I(education^2), data = SLID)
language <- model.matrix(~language, data = SLID)
head(language)
library(mylm)
model3 <- mylm(wages ~ sex + age + language + I(education^2), data = SLID)
X <- model.matrix(~sex + age + language + I(education^2), data = SLID)
head(X)
library(mylm)
model3 <- mylm(wages ~ sex + age + language + I(education^2), data = SLID)
languageRELEVEL = relevel(SLID$language, ref "other")
languageRELEVEL <- relevel(SLID$language, ref = "other")
languageRELEVEL <- relevel(language, ref = "other")
SLID$languageRELEVEL <- relevel(SLID$language, ref = "other")
SLID$languageRELEVEL <- relevel(SLID$language, ref = "other")
# SLID$languageRELEVEL <- relevel(SLID$language, ref = "other")
library(mylm)
model3 <- mylm(wages ~ sex + age + language + I(education^2), data = SLID)
# R code for part 3c)
model2a <- mylm(wages ~ education, data = SLID)
model2b <- mylm(wages ~ age, data = SLID)
summary(model2a)
summary(model2b)
# SLID$languageRELEVEL <- relevel(SLID$language, ref = "other")
library(mylm)
model3 <- mylm(wages ~ sex + age + language + I(education^2), data = SLID)
library(formatR)
showsol <- FALSE
library(knitr)
opts_chunk$set(tidy.opts = list(width.cutoff = 68), tidy = TRUE, warning = FALSE, error = FALSE, message = FALSE, echo = TRUE)
library(car)
data(SLID, package = "carData")
SLID <- SLID[complete.cases(SLID), ]
# some R code for part 1a)
library(GGally)
ggpairs(SLID, lower = list(combo = wrap(ggally_facethist, binwidth = 0.5)))
# R code for part 2a)
library(mylm)
model1 <- mylm(wages ~ education, data = SLID)
print(model1)
model1b <- lm(wages ~ education, data = SLID)
print(model1b)
# R code for part 2b
print.default(model1$covariance_matrix)
# R code for part 2b
summary(model1)
summary(model1b)
cat("Z-values for the regression coefficients: ")
print.default(model1$z_value)
cat("P-values for the regression coefficients: ")
print.default(model1$p_value2)
# R code for part 2c)
library(ggplot2)
plot(model1)
plot(model1b, which = c(1))
cat("SSE: ")
print.default(model1$sse)
cat("SST: ")
print.default(model1$sst)
cat("R-squared: ")
print.default(model1$R_squared)
# R code for part 3a)
library(mylm)
model2 <- mylm(wages ~ education + age, data = SLID)
print(model2)
# R code for part 3b)
summary(model2)
# R code for part 3c)
model2a <- mylm(wages ~ education, data = SLID)
model2b <- mylm(wages ~ age, data = SLID)
summary(model2a)
summary(model2b)
library(car)
data(SLID, package = "carData")
SLID <- SLID[complete.cases(SLID), ]
# SLID$languageRELEVEL <- relevel(SLID$language, ref = "other")
library(mylm)
model3 <- mylm(wages ~ sex + age + language + I(education^2), data = SLID)
model3b <-  lm(wages ~ sex + age + language + I(education^2), data = SLID)
print(model3)
print(model3b)
SLID$languageRELEVEL <- relevel(SLID$language, ref = "other")
SLID$languageRELEVEL <- relevel(SLID$language, ref = "Other")
library(mylm)
model3 <- mylm(wages ~ sex + age + language + I(education^2), data = SLID)
model3b <-  lm(wages ~ sex + age + language + I(education^2), data = SLID)
print(model3)
print(model3b)
SLID$languageRELEVEL <- relevel(SLID$language, ref = "Other")
library(mylm)
model3 <- mylm(wages ~ sex + age + languageRELEVEL + I(education^2), data = SLID)
model3b <-  lm(wages ~ sex + age + language + I(education^2), data = SLID)
print(model3)
print(model3b)
SLID$languageRELEVEL <- relevel(SLID$language, ref = "Other")
library(mylm)
model3 <- mylm(wages ~ sex + age + languageRELEVEL + I(education^2), data = SLID)
model3b <-  lm(wages ~ sex + age + language + I(education^2), data = SLID)
print(model3)
print(model3b)
SLID$languageRELEVEL <- relevel(SLID$language, ref = "Other")
library(mylm)
model3 <- mylm(wages ~ sex + age + languageRELEVEL + I(education^2), data = SLID)
model3b <-  lm(wages ~ sex + age + languageRELEVEL + I(education^2), data = SLID)
print(model3)
print(model3b)
Chi-squared = (model1$sst - model1$sse)/model$sse
Chi-squared = (model1$sst - model1$sse)/model1$sse
chi_squared <- (model1$sst - model1$sse)/model1$sse
print(chi_squared)
library(mylm)
library(mylm)
library(formatR)
showsol <- FALSE
library(knitr)
opts_chunk$set(tidy.opts = list(width.cutoff = 68), tidy = TRUE, warning = FALSE, error = FALSE, message = FALSE, echo = TRUE)
library(car)
data(SLID, package = "carData")
SLID <- SLID[complete.cases(SLID), ]
# some R code for part 1a)
library(GGally)
ggpairs(SLID, lower = list(combo = wrap(ggally_facethist, binwidth = 0.5)))
# R code for part 2a)
library(mylm)
model1 <- mylm(wages ~ education, data = SLID)
print(model1)
model1b <- lm(wages ~ education, data = SLID)
print(model1b)
# R code for part 2b
print.default(model1$covariance_matrix)
# R code for part 2b
summary(model1)
summary(model1b)
cat("Z-values for the regression coefficients: ")
print.default(model1$z_value)
cat("P-values for the regression coefficients: ")
print.default(model1$p_value2)
# R code for part 2c)
library(ggplot2)
plot(model1)
plot(model1b, which = c(1))
cat("SSE: ")
print.default(model1$sse)
cat("SST: ")
print.default(model1$sst)
chi_squared <- model1$degrees_of_freedom*(model1$sst - model1$sse)/model1$sse
print(chi_squared)
chi_squared <- (model1$sst - model1$sse)/model1$sse
print(chi_squared)
chi_squared <- (model1$sst - model1$sse)/model1$sse
print(chi_squared)
pnorm(chi_squared)
chi_squared <- (model1$sst - model1$sse)/model1$sse
print(chi_squared)
summary(model1b)
chi_squared <- (model1$sst - model1$sse)/model1$sse
print(chi_squared)
pnorm(chi_squared)
summary(model1b)
chi_squared <- model1$degrees_of_freedom(model1$sst - model1$sse)/model1$sse
chi_squared <- model1$degrees_of_freedom*(model1$sst - model1$sse)/model1$sse
print(chi_squared)
pnorm(chi_squared)
summary(model1b)
chi_squared <- (model1$sst - model1$sse)/model1$sse
print(chi_squared)
pnorm(chi_squared)
summary(model1b)
chi_squared <-  model1$sst*(model1$sst - model1$sse)/model1$sse
print(chi_squared)
pnorm(chi_squared)
summary(model1b)
chi_squared <-  model1$degrees_of_freedom*(model1$sst - model1$sse)/model1$sse
print(chi_squared)
pnorm(chi_squared)
summary(model1b)
chi_squared <-  model1$degrees_of_freedom*(model1$sst - model1$sse)/model1$sse
print(chi_squared)
pnorm(chi_squared)
summary(model1b)
z_value = 0.5
p_value <- pnorm(-abs(z_value))  * 2
p_value2 <- 2*exp(-(abs(z_value)^2)/2)/(sqrt(2*pi)*abs(z_value))
SLID$languageRELEVEL <- relevel(SLID$language, ref = "Other")
library(mylm)
model3 <- mylm(wages ~ sex + age + languageRELEVEL + I(education^2), data = SLID)
model3b <-  lm(wages ~ sex + age + languageRELEVEL + I(education^2), data = SLID)
print(model3)
print(model3b)
z_value = 0.5
p_value <- pnorm(-abs(z_value))  * 2
p_value2 <- 2*exp(-(abs(z_value)^2)/2)/(sqrt(2*pi)*abs(z_value))
p_value
p_value2
z_value=3
p_value <- pnorm(-abs(z_value))  * 2
p_value2 <- 2*exp(-(abs(z_value)^2)/2)/(sqrt(2*pi)*abs(z_value))
p_value2
p_value
library(mylm)
library(formatR)
showsol <- FALSE
library(knitr)
opts_chunk$set(tidy.opts = list(width.cutoff = 68), tidy = TRUE, warning = FALSE, error = FALSE, message = FALSE, echo = TRUE)
chi_squared <-  model1$degrees_of_freedom*(model1$sst - model1$sse)/model1$sse
print(chi_squared)
pnorm(chi_squared)
dnorm(chi_squared)
summary(model1b)
chi_squared <-  model1$degrees_of_freedom*(model1$sst - model1$sse)/model1$sse
print(chi_squared)
pnorm(-abs(chi_squared))
summary(model1b)
chi_squared <-  model1$degrees_of_freedom*(model1$sst - model1$sse)/model1$sse
print(chi_squared)
pnorm(-abs(chi_squared))
model1b$fstatistic
chi_squared <-  model1$degrees_of_freedom*(model1$sst - model1$sse)/model1$sse
print(chi_squared)
pnorm(-abs(chi_squared))
summary(model1b)$fstatistic
chi_squared <-  model1$degrees_of_freedom*(model1$sst - model1$sse)/model1$sse
print(chi_squared)
pnorm(-abs(chi_squared))
summary(model1b)$fstatistic[0]
chi_squared <-  model1$degrees_of_freedom*(model1$sst - model1$sse)/model1$sse
print(chi_squared)
pnorm(-abs(chi_squared))
summary(model1b)$fstatistic[1]
chi_squared <-  model1$degrees_of_freedom*(model1$sst - model1$sse)/model1$sse
print(chi_squared)
pnorm(-abs(chi_squared))
summary(model1b)$fstatistic[1]
summary(model1b)$
ltOut <- capture.output(summary(model1b))
chi_squared <-  model1$degrees_of_freedom*(model1$sst - model1$sse)/model1$sse
print(chi_squared)
pnorm(-abs(chi_squared))
summary(model1b)$fstatistic[1]
anova(model1b)$"Pr(>F)"[1]
chi_squared <-  model1$degrees_of_freedom*(model1$sst - model1$sse)/model1$sse
print(chi_squared)
pchisq(-abs(chi_squared))
chi_squared <-  model1$degrees_of_freedom*(model1$sst - model1$sse)/model1$sse
print(chi_squared)
pchisq(-abs(chi_squared), model1$degrees_of_freedom)
summary(model1b)$fstatistic[1]
anova(model1b)$"Pr(>F)"[1]
chi_squared <-  model1$degrees_of_freedom*(model1$sst - model1$sse)/model1$sse
print(chi_squared)
pchisq(-abs(chi_squared), 1)
summary(model1b)$fstatistic[1]
anova(model1b)$"Pr(>F)"[1]
chi_squared <-  model1$degrees_of_freedom*(model1$sst - model1$sse)/model1$sse
print(chi_squared)
pchisq(chi_squared, 1)
summary(model1b)$fstatistic[1]
anova(model1b)$"Pr(>F)"[1]
chi_squared <-  model1$degrees_of_freedom*(model1$sst - model1$sse)/model1$sse
print(chi_squared)
pchisq(chi_squared, 1, lower.tail = FALSE)
summary(model1b)$fstatistic[1]
anova(model1b)$"Pr(>F)"[1]
library(formatR)
showsol <- FALSE
library(knitr)
opts_chunk$set(tidy.opts = list(width.cutoff = 68), tidy = TRUE, warning = FALSE, error = FALSE, message = FALSE, echo = TRUE)
cat("Chi-squared statistics from mylm-package: ")
chi_squared <-  model1$degrees_of_freedom*(model1$sst - model1$sse)/model1$sse
print(chi_squared)
cat("\nChi-squared p-value: ")
pchisq(chi_squared, 1, lower.tail = FALSE)
cat("F-statistics from lm-package: ")
summary(model1b)$fstatistic[1]
cat("\nF p-value: ")
anova(model1b)$"Pr(>F)"[1]
cat("Chi-squared statistics from mylm-package: ")
chi_squared <-  model1$degrees_of_freedom*(model1$sst - model1$sse)/model1$sse
print(chi_squared)
cat("Chi-squared p-value: ")
pchisq(chi_squared, 1, lower.tail = FALSE)
cat("\nF-statistics from lm-package: ")
summary(model1b)$fstatistic[1]
cat("F p-value: ")
anova(model1b)$"Pr(>F)"[1]
cat("Chi-squared statistics from mylm-package: ")
chi_squared <-  model1$degrees_of_freedom*(model1$sst - model1$sse)/model1$sse
print(chi_squared)
cat("Chi-squared p-value: ")
pchisq(chi_squared, 1, lower.tail = FALSE)
cat("\nF-statistics from lm-package: ")
summary(model1b)$fstatistic[1,0]
library(mylm)
library(formatR)
showsol <- FALSE
library(knitr)
opts_chunk$set(tidy.opts = list(width.cutoff = 68), tidy = TRUE, warning = FALSE, error = FALSE, message = FALSE, echo = TRUE)
library(mylm)
model1 <- mylm(wages ~ education, data = SLID)
print(model1)
model1b <- lm(wages ~ education, data = SLID)
print(model1b)
summary(model1)
summary(model1b)
library(mylm)
library(formatR)
showsol <- FALSE
library(knitr)
opts_chunk$set(tidy.opts = list(width.cutoff = 68), tidy = TRUE, warning = FALSE, error = FALSE, message = FALSE, echo = TRUE)
library(mylm)
model1 <- mylm(wages ~ education, data = SLID)
print(model1)
model1b <- lm(wages ~ education, data = SLID)
print(model1b)
summary(model1)
summary(model1b)
library(mylm)
library(formatR)
showsol <- FALSE
library(knitr)
opts_chunk$set(tidy.opts = list(width.cutoff = 68), tidy = TRUE, warning = FALSE, error = FALSE, message = FALSE, echo = TRUE)
library(mylm)
model1 <- mylm(wages ~ education, data = SLID)
print(model1)
model1b <- lm(wages ~ education, data = SLID)
print(model1b)
summary(model1)
summary(model1b)
library(mylm)
library(formatR)
showsol <- FALSE
library(knitr)
opts_chunk$set(tidy.opts = list(width.cutoff = 68), tidy = TRUE, warning = FALSE, error = FALSE, message = FALSE, echo = TRUE)
summary(model1)
summary(model1b)
library(formatR)
showsol <- FALSE
library(knitr)
opts_chunk$set(tidy.opts = list(width.cutoff = 68), tidy = TRUE, warning = FALSE, error = FALSE, message = FALSE, echo = TRUE)
cat("Z-values for the regression coefficients: ")
print.default(model1$z_value)
cat("P-values for the regression coefficients: ")
print.default(model1$p_value2)
cat("P-values for the regression coefficients: ")
print.default(model1$p_value)
cat("Chi-squared statistics from mylm-package: ")
chi_squared <-  model1$degrees_of_freedom*(model1$sst - model1$sse)/model1$sse
print(chi_squared)
cat("Chi-squared p-value: ")
pchisq(chi_squared, 1, lower.tail = FALSE)
cat("\nF-statistics from lm-package: ")
summary(model1b)$fstatistic[1]
cat("F p-value: ")
anova(model1b)$"Pr(>F)"[1]
cat("Chi-squared statistics from mylm-package: ")
chi_squared <-  model1$degrees_of_freedom*(model1$sst - model1$sse)/model1$sse
print(chi_squared)
cat("Chi-squared p-value: ")
pchisq(chi_squared, 1, lower.tail = FALSE)
cat("\nF-statistics from lm-package: ")
summary(model1b)$fstatistic[1]
cat("F-statistics p-value: ")
anova(model1b)$"Pr(>F)"[1]
summary(model1)
summary(model1b)
summary(model1)
summary(model1b)
library(mylm)
model1 <- mylm(wages ~ education, data = SLID)
print(model1)
model1b <- lm(wages ~ education, data = SLID)
print(model1b)
summary(model1)
summary(model1b)
critical_z <- qnorm(.05/2,lower.tail=FALSE)
critical_z <- qnorm(.05/2,lower.tail=FALSE)
cricical_z
critical_z <- qnorm(.05/2,lower.tail=FALSE)
critical_z
critical_z <- qnorm(.05/2,lower.tail=FALSE)
critical_z
cricical_chi <- qchisq(.05/2, 1, lower.tail=FALSE)
critical_z <- qnorm(.05/2,lower.tail=FALSE)
critical_z
cricical_chi <- qchisq(.05/2, 1, lower.tail=FALSE)
cricical_chi
cat("Critical z-value")
critical_z <- qnorm(.05/2,lower.tail=FALSE)
critical_z
cat("Critical chi-squared value")
cricical_chi <- qchisq(.05/2, 1, lower.tail=FALSE)
cricical_chi
cat("Critical z-value: ")
critical_z <- qnorm(.05/2,lower.tail=FALSE)
critical_z
cat("Critical chi-squared value: ")
cricical_chi <- qchisq(.05/2, 1, lower.tail=FALSE)
cricical_chi
cat("Critical z-value: ")
critical_z <- qnorm(.05/2,lower.tail=FALSE)
critical_z
print(pnorm(1.959964)*2)
cat("Critical chi-squared value: ")
cricical_chi <- qchisq(.05/2, 1, lower.tail=FALSE)
cricical_chi
cat("Critical z-value: ")
critical_z <- qnorm(.05/2,lower.tail=FALSE)
critical_z
print(pnorm(-1.959964)*2)
cat("Critical chi-squared value: ")
cricical_chi <- qchisq(.05/2, 1, lower.tail=FALSE)
cricical_chi
cat("Critical z-value: ")
critical_z <- qnorm(.05/2,lower.tail=FALSE)
critical_z
print(pnorm(1.959964))
cat("Critical chi-squared value: ")
cricical_chi <- qchisq(.05/2, 1, lower.tail=FALSE)
cricical_chi
cat("Critical z-value: ")
critical_z <- qnorm(.05/2,lower.tail=FALSE)
critical_z
cat("Critical chi-squared value: ")
cricical_chi <- qchisq(.05/2, 1, lower.tail=FALSE)
cricical_chi
cat("Critical z-value: ")
critical_z <- qnorm(.05/2,lower.tail=FALSE)
critical_z
cat("Critical chi-squared value: ")
cricical_chi <- qchisq(.05, 1, lower.tail=FALSE)
cricical_chi
library(mylm)
